openapi: 3.0.0
x-hideTryItPanel: true
info:
  title: Merchant Backend V2
  version: '1.0'
  description: Documentation for merchant backend proccessing endpoints
  x-gitbook-description-document:
    object: document
    data:
      schemaVersion: 8
    nodes:
      - object: block
        type: paragraph
        isVoid: false
        data: {}
        nodes:
          - object: text
            leaves:
              - object: leaf
                text: Documentation for merchant backend proccessing endpoints
                marks: []
  x-gitbook-description-html: <p>Documentation for merchant backend proccessing endpoints</p>
servers:
  - url: https://app.cryptoprocessing.com/api/v2
tags:
  - name: Check status
  - name: balance
  - name: currencies
  - name: deposit addresses
  - name: withdrawal
  - name: exchange
  - name: Invoices
  - name: transactions
security:
  - ApiKeyAuth:
    - xProcessingKey
    - xProcessingSignature
paths:
  /ping:
    get:
      summary: Check status
      x-page-title: Check status
      x-mint:
          content: Test if your API connection is working.
      responses:
        '200':
          description: OK
          x-gitbook-description-html: <p>OK</p>
      operationId: get-ping
      tags:
       - Check status
      security:
        - {}

  /invoices/create:
    post:
      summary: Create an invoice
      x-code-samples:
        - lang: HTTP
          label: 'Invoice without a timer'
          source: |-
            POST /api/v2/invoices/create HTTP/1.1
            Host: app.cryptoprocessing.com
            X-Processing-Key: text
            X-Processing-Signature: text
            Content-Type: application/json
            Accept: */*
            Content-Length: 161
            
            {
                "timer": false,
                "title": "Invoice Title",
                "currency": "EUR",
                "amount": 106.75,
                "foreign_id": "user_196",
                "end_user_reference": "12345",
                "url_success": "https://example.com/success",
                "url_failed": "https://example.com/failed",
                "email_user": "email@example.com",
                "sender_type": natural,
                "sender_data": {
                  "first_name": "Friedrich",
                  "last_name": "MÃ¼ller",
                  "date_of_birth": "1995-08-17"
                  }
            }
        - lang: HTTP
          label: 'Invoice with a timer'
          source: |-
            POST /api/v2/invoices/create HTTP/1.1
            Host: app.cryptoprocessing.com
            X-Processing-Key: text
            X-Processing-Signature: text
            Content-Type: application/json
            Accept: */*
            Content-Length: 161

              {
                "timer": true,
                "title": "Invoice Title",
                "currency": "BTC",
                "amount": 0.02,
                "foreign_id": "user_197",
                "end_user_reference": "12345",
                "url_success": "https://example.com/success",
                "url_failed": "https://example.com/failed",
                "email_user": "email@example.com",
                "sender_type": legal,
                "sender_data": {
                  "legal_name": "Example GmbH",
                  "country_of_registration": "DEU"
                  }
              }
        - lang: HTTP
          label: 'Invoice with a timer and a pre-selected currency'
          source: |-
            POST /api/v2/invoices/create HTTP/1.1
            Host: app.cryptoprocessing.com
            X-Processing-Key: text
            X-Processing-Signature: text
            Content-Type: application/json
            Accept: */*
            Content-Length: 161
            
            {
                "timer": true,
                "title": "Invoice Title",
                "description": "Invoice description",
                "currency": "EUR",
                "sender_currency": "BTC",
                "amount": 35,
                "foreign_id": "user_198",
                "end_user_reference": "12345",
                "url_success": "https://example.com/success",
                "url_failed": "https://example.com/failed",
                "email_user": "email@example.com"
            }

      x-gitbook-description-html: |
        <p>Create an invoice for the client for a specified amount. Make sure that the
          URLs that you provide in the <code>url_success</code> and <code>url_failed</code> fields use the
          secure HTTPS protocol, use domain names (not IP addresses) and are
          considered clean by <a href=https://www.virustotal.com/gui/home/url>VirusTotal</a> and similar scanners.</p>
          <p><b>Note</b>: Cryptoprocessing is required to collect sender data in compliance with the MiCA regulations. For more details, see <a href=https://docs.cryptoprocessing.com/api-documentation/about-user-data-collection>About user data collection.</a></p>
          <p>The <code>end_user_reference</code> parameter is used to group, track and analyse transactions made by a specific customer. To prevent transactions from getting delayed or cancelled, always make sure to include the correct ID. The ID must not contain any personal or identifying customer data.</p>
          <p>If you do not provide sender data in the request, the invoice will still be created, but your customer will be prompted for their data on the invoice form. If the customer is already registered in your system, include their <code>end_user_reference</code> and the <code>sender_data</code> object for a smoother user experience.</p>
          <p><b>Warning:</b> For invoices with a timer and pre-selected currency, <code>sender_type</code> and <code>sender_data</code> are required.</p>
      x-mint:
          content: "Create an invoice for the client for a specified amount. \n\n 
          Make sure that the URLs that you provide in the url_success and url_failed fields use the secure HTTPS protocol, use domain names (not IP addresses) and are considered clean by VirusTotal and similar scanners.\n\n
          <Note>Cryptoprocessing is required to collect sender data in compliance with the MiCA regulations. For more details, see About user data collection.</Note>
          The <code>end_user_reference</code> parameter is used to group, track and analyse transactions made by a specific customer. To prevent transactions from getting delayed or cancelled, always make sure to include the correct ID. The ID must not contain any personal or identifying customer data.\n\n
          If you do not provide sender data in the request, the invoice will still be created, but your customer will be prompted for their data on the invoice form. If the customer is already registered in your system, include their <code>end_user_reference</code> and the <code>sender_data</code> object for a smoother user experience.\n\n
          <Note>For invoices with a timer and pre-selected currency, sender_type and sender_data are required.</Note>"
      tags:
        - Invoices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    data:
                      id: 123732
                      url: 
                      foreign_id: user_1714
                      address: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title: Invoice 137
                      status: pending
                      currency: BTC
                      amount: '0.01230000'
                      sender_currency: BTC
                      sender_amount: '0.01230000'
                      fixed_at: 1667895345
                      release_at: 1667896245
                      seconds_left: 899
                  example-2:
                    data:
                      id: 123732
                      url: 
                      foreign_id: user_1714
                      address: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title: Invoice 137
                      status: pending
                      currency: BTC
                      amount: '0.01230000'
                      sender_currency: BTC
                      sender_amount: '0.01230000'
                      fixed_at: 1667895345
                      release_at: 1667896245
                      seconds_left: 899
                properties:
                  data:
                    type: object
                    required:
                     - id
                     - url
                     - foreign_id
                     - end_user_reference
                     - address
                     - title
                     - status
                     - currency
                     - amount
                     - sender_currency
                     - sender_amount
                     - fixed_at
                     - release_at
                     - seconds_left
                    properties:
                      id:
                        type: integer
                        format: int32
                        description: Invoice ID.
                        example: 123732
                      url:
                        type: string
                        format: uri
                        description: Invoice URL.
                      foreign_id:
                        type: string
                        description: This invoice's unique ID in your system.
                      end_user_reference:
                        type: string
                        description: The unique ID of the customer this invoice is for. You can use it to group invoices by customer.
                      address:
                        type: string
                        description: The address that will receive the invoice payment.
                        example: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title:
                        type: string
                        minLength: 1
                        description: Invoice title.
                      status:
                        type: string
                        x-gitbook-description-html: For newly created invoices, this will always be either <code>created</code> or <code>pending</code>.
                        enum:
                          - created
                          - pending
                      currency:
                        type: string
                        description: Invoice currency.
                      amount:
                        type: string
                        description: Invoice amount.
                        example: '0.01230000'
                      sender_currency:
                        type: string
                        default: null
                        description: The currency the customer will pay in. Defaults to null for invoices without a pre-selected currency.
                      sender_amount:
                        type: string
                        example: '0.01230000'
                        default: null
                        description: The amount the customer needs to pay in their sender_currency. Defaults to null for invoices without a pre-selected currency.
                      fixed_at:
                        type: integer
                        format: int64
                        default: null
                        description: The Unix timestamp for when the invoice was created, in seconds. Defaults to null for invoices without a timer.
                        example: 1667896245
                      release_at:
                        type: integer
                        default: null
                        description: The Unix timestamp for when the invoice will expire, in seconds. Defaults to null for invoices without a timer.
                        format: int64
                        example: 1667896245
                      seconds_left:
                        type: integer
                        format: int32
                        default: null
                        description: The number of seconds left until the invoice expires. Defaults to null for invoices without a timer.
                        example: 899
              examples:
                Invoice without a timer:
                  value:
                    data:
                      id: 127
                      url: https://wallet.coinspaid.com/invoice/iEU3uh
                      foreign_id: user_196
                      end_user_reference: 12345
                      address: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title: Invoice 171
                      status: created
                      currency: EUR
                      amount: '0.106.75000000'
                      sender_currency: null
                      sender_amount: null
                      fixed_at: null
                      release_at: null
                      seconds_left: null
                Invoice with a timer:
                  value:
                    data:
                      id: 26
                      url: https://wallet.coinspaid.com/invoice/XJrbOG
                      foreign_id: user_197
                      end_user_reference: 12345
                      address: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title: Invoice 172
                      status: pending
                      currency: BTC
                      amount: '0.01000000'
                      sender_currency: null
                      sender_amount: null
                      fixed_at: 1592315493
                      release_at: 1592316393
                      seconds_left: 899
                Invoice with a timer and a pre-selected currency:
                  value:
                    data:
                      id: 28
                      url: https://wallet.coinspaid.com/invoice/zeUBm1
                      foreign_id: user_200
                      end_user_reference: 12345
                      address: 2NCMFo2k7S8HSDWp6qwQ2wiAMwz3XwEC4Gp
                      title: Invoice 173
                      status: pending
                      currency: BTC
                      amount: '0.01000000'
                      sender_currency: EUR
                      sender_amount: 35.00000000
                      fixed_at: 1592316313
                      release_at: 1592317213
                      seconds_left: 899
          x-gitbook-description-html: <p>OK</p>
        '403':
          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-invoices-create
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: "For partial pay invoices, set this parameter to good_until_expired. For standard invoices, use fill_or_kill or leave this parameter empty."
                  enum:
                    - fill_or_kill
                    - good_until_expired
                end_user_reference:
                  $ref: "#/components/schemas/end_user_reference"
                timer:
                  type: boolean
                  description: If this parameter is set to true, the invoice will expire in 15 minutes after it is created.
                title:
                  type: string
                  maxLength: 50
                  description: Invoice title that the customer will see.
                  minLength: 1
                description:
                  type: string
                  description: Invoice description that the customer will see.
                  maxLength: 1000
                foreign_id:
                  $ref: "#/components/schemas/foreign_id"
                  maxLength: 255
                currency:
                  type: string
                  description: Currency you want to receive deposits in. For a list of all available currencies, see Supported currencies.
                sender_currency:
                  type: string
                  description: Currency of the customer's invoice payment. Invoices with a timer and a pre-selected currency will be externalized at the time of sending this parameter with <code>timer</code> set to true.
                amount:
                  type: number
                  description: "Invoice amount that you want to receive from the customer."
                url_success:
                  type: string
                  format: uri
                  description: "The URL the customer will be redirected to in case of a successful invoice payment."
                url_failed:
                  type: string
                  description: "The URL the customer will be redirected to in case of an unsuccessful invoice payment."
                  format: uri
                email_user:
                  type: string
                  description: If the amount the customer pays does not match the amount you set for the invoice, Cryptoprocessing will send an email to this address instructing the customer on how they can receive a refund. If they paid less, they will receive a full refund. If they paid more, the customer will get instructions on how to be refunded the difference.
                  format: email
                sender_type:
                  type: string
                  enum:
                  - natural
                  - legal
                  description: Whether the sender is a natural person (<code>natural</code>) or a legal entity (<code>legal</code>). If you include the <code>sender_type</code> parameter in the request, <code>sender_data</code> is also required.
                sender_data: 
                  description: If the sender is a natural person, include their <code>first_name</code>, <code>last_name</code> and <code>date_of_birth</code>. If the sender is a legal entity, include their <code>legal_name</code> and <code>country_of_registration</code>.
                  type: object
                  required:
                    - first_name
                    - last_name
                    - date_of_birth
                    - legal_name
                    - country_of_registration
                  properties:
                    first_name:
                      $ref: "#/components/schemas/sender_data_first_name"
                    last_name:
                      $ref: "#/components/schemas/sender_data_last_name"
                    date_of_birth:
                      $ref: "#/components/schemas/sender_data_date_of_birth"
                    legal_name:
                      $ref: "#/components/schemas/sender_data_legal_name"
                    country_of_registration:
                      $ref: "#/components/schemas/sender_data_country_of_registration"
              required:
                - timer
                - title
                - foreign_id
                - currency
                - amount
                - url_success
                - url_failed
                - email_user
            examples:
              Basic example:
                value:
                  type: fill_or_kill
                  timer: true
                  title: Invoice 171
                  description: string
                  foreign_id: string
                  currency: BTC
                  sender_currency: string
                  amount: 0
                  url_success: http://example.com
                  url_failed: http://example.com
                  email_user: user@example.com
                  sender_type: legal
                  sender_data:
                    legal_name: Example GmbH
                    country_of_registration: DEU
 



components:
  schemas:
    currency_rate_from:
      type: string
      description: The amount to be exchanged, in currency_from.
    currency_rate_to:
      type: string
      description: The amount to be received, in currency_to.
    currency_from:
      type: object
      description: The currency to be exchanged.
      properties:
        currency:
          type: string
          description: Currency ticker.
        type:
          type: string
          description: Currency type (crypto or fiat).
          enum: 
            - crypto
            - fiat
        min_amount:
          type: string
          description: The minimum amount for deposits without exchange.
        min_amount_deposit_with_exchange:
          type: string
          description: The minimum amount for deposits with exhange.
    currency_to:
      type: object
      description: The currency to receive.
      properties:
        currency:
          type: string
          description: Currency ticker.
        type:
          type: string
          description: Currency type (crypto or fiat).
          enum:
            - crypto
            - fiat
    exchange_sender_currency:
      type: string
      description: Currency to be exchanged.
    exchange_sender_amount:
      type: string
      description: Amount to be exchanged.
    exchange_receiver_currency:
      type: string
      description: Currency to be received.
    exchange_receiver_amount:
      type: string
      description: Amount to be received.
    exchange_fee_currency:
      type: string
      description: The currency the network fee will be paid in.
    exchange_fee_amount:
      type: string
      description: Network fee amount.
    exchange_price:
      type: string
      description: Exchange rate.
    exchange_id:
      type: integer
      format: int32
      minimum: 1
      description: Exchange ID.
    exchange_foreign_id:
      type: string
      minLength: 1
      description: This exchange's unique identifier in your system.
    exchange_type:
      type: string
      description: Operation type.
    exchange_status:
      type: string
      description: Exchange status.
      default: processing
    foreign_id:
      type: string
      description: "Unique foreign ID in your system. Must not contain personal data, such as the user's name or email address."
    end_user_reference:
      type: string
      description: Permanent ID of the customer in your system. Must not contain personal data, such as the user's name or email address. Include this customer's data in the <code>sender_data</code> object.
    sender_type:
      type: string
      enum:
      - natural
      - legal
      description: Whether the sender is a natural person (<code>natural</code>) or a legal entity (<code>legal</code>). 
    sender_data_first_name:
      type: string
      description: The sender's first name. This is required for a natural person. For a legal entity, do not include this parameter.
    sender_data_last_name:
      type: string
      description: The sender's last name. This is required for a natural person. For a legal entity, do not include this parameter.
    sender_data_date_of_birth:
      type: string
      description: The sender's date of birth, YYYY-MM-DD. You can optionally include this for a natural person. For a legal entity, do not include this parameter.
    sender_data_email: 
      type: string
      description: The sender's email. You can optionally include this parameter for both natural persons and legal entities. The formatting of the value is checked to make sure it is a valid email address.
    sender_data_legal_name:
      type: string
      description: The company's name. This is required for a legal entity. For a natural person, do not include this parameter.
    sender_data_country_of_registration:
      type: string
      description: The company's country of registration (ISO alpha-3 format, three characters). This is required for a legal entity. For a natural person, do not include this parameter.
    receiver_data_first_name:
      type: string
      description: The recipient's first name. This is required for a natural person. For a legal entity, do not include this parameter.
    receiver_data_last_name:
      type: string
      description: The recipient's last name. This is required for a natural person. For a legal entity, do not include this parameter.
    receiver_data_date_of_birth:
      type: string
      description: The recipient's date of birth, YYYY-MM-DD. You can optionally include this for a natural person. For a legal entity, do not include this parameter.
    receiver_data_email: 
      type: string
      description: The recipient's email. You can optionally include this for a natural person. For a legal entity, do not include this parameter.
  
  responses:
    HeaderAuthorization:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            x-examples:
              example-1:
                error: Bad key header
                code: bad_header_key
            properties:
              error:
                type: string
                enum:
                  - Bad content format
                  - Bad key header
                  - Bad signature header
                  - Client is not enabled
                  - No key header
                  - Wrong api version
                  - No signature header
                default: Bad content format
              code:
                type: string
                enum:
                  - bad_content_format
                  - bad_header_key
                  - bad_header_signature
                  - client_disabled
                  - required_header_key
                  - required_header_signature
                  - api_disabled
                default: bad_content_format
            required:
              - error
              - code
          examples:
            Base example:
              value:
                error: Bad content format
                code: bad_content_format
      x-gitbook-description-html: <p>Example response</p>
    BadKeyHeader:
      description: Bad key header
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Bad key header.
              code: 
                type: string
                example: bad_header_key
            x-gitbook-description-html: If you are getting this error message, make sure you are using the right API key. Double-check the key is not converted to lowercase or uppercase.
    ErrorResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                uniqueItems: true
                items:
                  type: string
                  example: Internal error
              error_code:
                type: integer
                enum:
                  - 422
            required:
              - errors
              - error_code
          examples:
            Basic example:
              value:
                errors:
                  - Internal error
                error_code: 422
      x-gitbook-description-html: <p>Example response</p>
  securitySchemes:
    xProcessingKey:
      type: apiKey
      in: header 
      name: X-processing-key
    xProcessingSignature:
      type: apiKey
      in: header
      name: X-processing-signature
