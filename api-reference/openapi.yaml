openapi: 3.0.0
x-hideTryItPanel: true
info:
  title: Merchant Backend V2
  version: '1.0'
  description: Documentation for merchant backend proccessing endpoints
  x-gitbook-description-document:
    object: document
    data:
      schemaVersion: 8
    nodes:
      - object: block
        type: paragraph
        isVoid: false
        data: {}
        nodes:
          - object: text
            leaves:
              - object: leaf
                text: Documentation for merchant backend proccessing endpoints
                marks: []
  x-gitbook-description-html: <p>Documentation for merchant backend proccessing endpoints</p>
servers:
  - url: https://app.cryptoprocessing.com/api/v2
tags:
  - name: status
  - name: balance
  - name: currencies
  - name: deposit addresses
  - name: withdrawal
  - name: exchange
  - name: invoices
  - name: transactions
security:
  - ApiKeyAuth:
    - xProcessingKey
    - xProcessingSignature
paths:
  /ping:
    get:
      summary: Check status
      x-page-title: Check status
      x-gitbook-description-html: "<p>Test if API is up and running and your authorisation is working.</p>"
      responses:
        '200':
          description: OK
          x-gitbook-description-html: <p>OK</p>
      operationId: get-ping
      tags:
       - status
      security:
        - {}
      x-gitbook-description-document:
        object: document
        data:
          schemaVersion: 8
        nodes:
          - object: block
            type: paragraph
            isVoid: false
            data: {}
            nodes:
              - object: text
                leaves:
                  - object: leaf
                    text: >-
                      Test if your API connection is working.
                    marks: []
  /accounts/list:
    post:
      summary: Get a list of balances
      description: Get a list of your balances for each cryptocurrency, including zero balances.
      tags:
        - balance
      operationId: post-accounts-list
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                 - currency
                 - type
                 - balance
                properties:
                  currency:
                    type: string
                    description: Account currency.
                  type:
                    type: string
                    description: Whether this account is for a crypto or a fiat currency.
                    enum:
                      - crypto
                      - fiat
                  balance:
                    type: number
                    description: Balance amount.
              examples:
                Basic example:
                  value:
                    data:
                      - currency: BTC
                        type: crypto
                        balance: 0.04
          x-gitbook-description-html: <p>OK</p>

  /currencies/list:
    post:
      summary: Get a list of currencies
      x-gitbook-description-html: <p>Returns a list of either supported or unsupported currencies.</p>
      tags:
        - currencies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                       - id
                       - type
                       - currency
                       - minimum_amount
                       - deposit_fee_percent
                       - withdrawal_fee_percent
                      properties:
                        id:
                          type: string
                          description: Currency ID.
                        type:
                          type: string
                          description: Currency type (crypto or fiat).
                          enum:
                            - crypto
                            - fiat
                        currency:
                          type: string
                          description: Currency ticker.
                        minimum_amount:
                          type: string
                          description: The minimum deposit amount for this currency.
                        deposit_fee_percent:
                          type: string
                          description: The fee that is charged for deposits in this currency, in percentage of the deposit amount.
                        withdrawal_fee_percent:
                          type: string
                          description: The fee that is charged for withdrawals in this currency, in percentage of the withdrawal amount.
              examples:
                Basic example:
                  value:
                    data:
                      - id: 1
                        type: crypto
                        currency: BTC
                        minimum_amount: '0.00010000'
                        deposit_fee_percent: '0.000000'
                        withdrawal_fee_percent: '0.025000'
          x-gitbook-description-html: <p>OK</p>
        '403':
          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-currencies-list
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                visible:
                  type: boolean
                  description: >-
                    Whether the endpoint should return supported (true) or
                    unsupported (false) currencies.
                  x-gitbook-description-html: >-
                    <p>Whether the endpoint should return supported (true) or
                    unsupported (false) currencies.</p>
  /currencies/pairs:
    post:
      tags:
        - currencies
      summary: List of currency pairs
      x-gitbook-description-html: "<p>Get a list of available currency exchange pairs. Note that this endpoint only provides exchange pairs as a reference. It should not be used for exchanges in live environments.</p>"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    currency_from:
                      currency: BTC
                      type: crypto
                      min_amount: '0.00010000'
                      min_amount_deposit_with_exchange: '0.00010000'
                    currency_to:
                      currency: EUR
                      type: fiat
                    rate_from: '1'
                    rate_to: '20693.84879354'
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                       - currency_from
                       - currency_to
                       - rate_from
                       - rate_to
                      properties:
                        currency_from:
                          type: object
                          $ref: "#/components/schemas/currency_from"
                          required:
                           - currency
                           - type
                           - min_amount
                           - min_amount_deposit_with_exchange
                        
                        currency_to:
                          type: object
                          $ref: "#/components/schemas/currency_to"
                          required:
                           - currency
                           - type
                        rate_from:
                           $ref: "#/components/schemas/currency_rate_from"
                        rate_to:
                           $ref: "#/components/schemas/currency_rate_to"
              examples:
                Basic example:
                  value:
                    data:
                      - currency_from:
                          currency: BTC
                          type: crypto
                          min_amount: '0.00010000'
                          min_amount_deposit_with_exchange: '0.00010000'
                        currency_to:
                          currency: EUR
                          type: fiat
                        rate_from: '1'
                        rate_to: '20693.84879354'
          x-gitbook-description-html: <p>OK</p>
        '400':
          description: "Invalid currency"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      currency_from:
                        type: string
                        example: "The selected currency from is invalid."
                      currency_to:
                        type: string
                        example: "The selected currency to is invalid."
        '403':
          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-currencies-pairs
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currency_from:
                  type: string
                  x-gitbook-description-html: "Currency to exchange from. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                currency_to:
                  type: string
                  x-gitbook-description-html: "Currency to exchange to. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
            examples:
              Basic example:
                value:
                  currency_from: BTC
                  currency_to: EUR
  /currencies/rates:
    post:
      tags:
        - currencies
      summary: List of currency rates
      x-gitbook-description-html: "<p>Get a particular pair and its price. Note that this endpoint only provides rate estimates as a reference. It should not be used for exchanges in live environments.</p>"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    uniqueItems: true
                    minItems: 0
                    items:
                      type: object
                      required:
                       - currency_from
                       - currency_to
                       - rate_from
                       - rate_to
                      properties:
                        currency_from:
                          type: object
                          $ref: "#/components/schemas/currency_from"
                          required:
                           - currency
                           - type
                           - min_amount
                           - min_amount_deposit_with_exchange
                        currency_to:
                          type: object
                          $ref: "#/components/schemas/currency_to"
                          required:
                           - currency
                           - type
                        rate_from:
                          $ref: "#/components/schemas/currency_rate_from"
                        rate_to:
                          $ref: "#/components/schemas/currency_rate_to"
              examples:
                Basic example:
                  value:
                    data:
                      - currency_from:
                          currency: BTC
                          type: crypto
                          min_amount: '0.00010000'
                          description: Filter by currency ISO that exchanges from.
                          min_amount_deposit_with_exchange: '0.00010000'
                        currency_to:
                          currency: EUR
                          type: fiat
                          description: Filter by currency ISO that can be converted to.
                        rate_from: '1'
                        rate_to: '20693.84879354'
          x-gitbook-description-html: <p>OK</p>
        '403':
          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-currencies-rates
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currency_from:
                  x-gitbook-description-html: "Currency to exchange from. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                  type: string
                currency_to:
                  x-gitbook-description-html: "Currency to exchange to. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                  type: string
            examples:
              Basic example:
                value:
                  currency_from: BTC
                  currency_to: EUR
  /addresses/take:
    post:
      summary: Generate a crypto address
      x-gitbook-description-html:
        "<p>Create a crypto deposit address you can share with clients. Optionally, you can automatically convert all deposits you receive to a currency of your choice. </p>
        <p>If you're receiving or converting to XRP, you will receive a tag in the response that you must display to the customer alongside their address. Any XRP deposits sent without a tag may be lost. For more details, see <a href=https://docs.cryptoprocessing.com/faq#what-is-a-destination-tag-memo>What is a destination tag or memo?</a>.</p>
        <p>If you want to automatically convert all deposits to a currency of your (or your customer's) choice, specify its ISO code in the convert_to parameter.</p>
        <p>The <code>end_user_reference</code> parameter is used to group, track and analyse transactions made by a specific customer. To prevent transactions from getting delayed or cancelled, always make sure to include the correct ID. The ID must not contain any personal or identifying customer data.</p>
        <p><b>Note</b>: Cryptoprocessing is required to collect sender data in compliance with the MiCA regulations. For more details, see <a href=https://docs.cryptoprocessing.com/api-documentation/about-user-data-collection>About user data collection</a>. The <code>sender_data</code> and the <code>end_user_reference</code> you provide must be associated with the same customer."
      tags:
        - deposit addresses
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    data:
                      id: 23553829
                      currency: BTC
                      address: 2NFZ9SmEm3mQ7jqVF4vPXBwCyn9KpmEwkTj
                      tag: null
                      foreign_id: new_BTC_address12
                      end_user_reference: guest_user_17
                properties:
                  data:
                    type: object
                    required:
                     - id
                     - currency
                     - address
                     - tag
                     - foreign_id
                     - end_user_reference
                    properties:
                      id:
                        type: integer
                        format: int32
                        description: Address ID.
                      currency:
                        type: string
                        description: Address currency.
                      convert_to:
                        type: string
                        x-gitbook-description-html: The currency all deposits to this address will be converted to. It is only returned if you included <code>convert_to</code> in the request.
                      address:
                        type: string
                        description: The generated address.
                      tag:
                        type: string
                        default: null
                        x-gitbook-description-html: For XRP, you need to provide this tag to the user alongside their address. XRP deposits sent without a tag may be lost. For all other currencies, this will always be <code>null</code>.
                      foreign_id:
                        type: string
                        description: Unique ID of the customer who will be depositing to this address.
                      end_user_reference:
                        type: string
                        description: Permanent ID of the customer in your system.
              examples:
                Standard address:
                  value:
                    data:
                      id: 23553829
                      currency: BTC
                      address: 2NFZ9SmEm3mQ7jqVF4vPXBwCyn9KpmEwkTj
                      tag: null
                      foreign_id: new_BTC_address12
                      end_user_reference: guest_user_17
                XRP address (with a tag):
                  value:
                    data:
                      id: 3461858
                      currency: XRP
                      address: rhU55vVJwk8q7TMED8jpRAv29EtuhMKknj
                      tag: 3461858
                      foreign_id: new_XRP_address_1714
                      end_user_reference: guest_user_17
          x-gitbook-description-html: <p>OK</p>
        '400':
          description: Invalid currency
          content:
            application/json:
              schema:
                type: object
                x-gitbook-description-html: If you are getting this error message, the currency you are creating an address for is disabled. To create the address, enable this currency in your merchant dashboard.
                properties:
                  errors:
                    type: object
                    properties:
                      currency:
                        type: string
                        example: "Invalid currency"
        '403':
          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-addresses-take
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                end_user_reference:
                  $ref: "#/components/schemas/end_user_reference"
                currency:
                  type: string
                  x-gitbook-description-html: The currency you want to receive. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies">Supported currencies</a>.
                convert_to:
                  type: string
                  x-gitbook-description-html: >-
                    <p>If you need to automatically convert all deposits to a certain currency, specify its ISO code here. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies">Supported currencies</a>.</p>
                foreign_id:
                  type: string
                  x-gitbook-description-html: The unique ID of the customer who will be depositing to this address. It will be returned with every callback to make it easy for you to identify the customer within your system. The same <code>foreign_id</code> can be reused across multiple addresses that belong to the same customer. This parameter must not include any personal data.
                sender_type:
                  $ref: "#/components/schemas/sender_type"
                sender_data: 
                  type: object
                  x-gitbook-description-html: If the sender is a natural person, include their <code>first_name</code>, <code>last_name</code>, <code>date_of_birth</code> and <code>email</code>. If the sender is a legal entity, include the <code>legal_name</code>,<code>country_of_registration</code> and <code>email</code>.
                  required:
                    - first_name
                    - last_name
                    - date_of_birth
                    - legal_name
                    - country_of_registration
                  properties:
                    first_name:
                      $ref: "#/components/schemas/sender_data_first_name"
                    last_name:
                      $ref: "#/components/schemas/sender_data_last_name"
                    date_of_birth:
                      $ref: "#/components/schemas/sender_data_date_of_birth"
                    email: 
                      $ref: "#/components/schemas/sender_data_email"
                    legal_name:
                      $ref: "#/components/schemas/sender_data_legal_name"
                    country_of_registration:
                      $ref: "#/components/schemas/sender_data_country_of_registration"
              required:
                - currency
                - foreign_id
                - sender_data
                - sender_type
                - end_user_reference
            examples:
              Basic example:
                value:
                  currency: BTC
                  end_user_reference: guest_user_17
                  convert_to: EUR
                  foreign_id: new_BTC_address_1714
                  sender_type: legal
                  sender_data:
                    legal_name: Example GmbH
                    country_of_registration: DEU
  /withdrawal/crypto:
    post:
      summary: Withdraw crypto
      x-gitbook-description-html: >-
        <p>Withdraw in crypto to any specified address. You can send cryptocurrency
        from your Fiat currency balance by using the 'convert_to' parameter.</p>
        <p>The <code>end_user_reference</code> parameter is used to group, track and analyse transactions associated with a specific customer. To prevent transactions from getting delayed or cancelled, always make sure to include the correct ID. The ID must not contain any personal or identifying customer data.</p>
        <p><b>Note</b>: Cryptoprocessing is required to collect sender and recipient data in compliance with the MiCA regulations. For more details, see <a href=https://docs.cryptoprocessing.com/api-documentation/about-user-data-collection>About user data collection</a>. The <code>sender_data</code> and the <code>end_user_reference</code> you provide must be associated with the same customer. 
      tags:
        - withdrawal
      x-code-samples:
        - lang: HTTP
          label: 'Crypto withdrawal without conversion'
          source: |-
            POST /api/v2/withdrawal/crypto HTTP/1.1
            Host: app.cryptoprocessing.com
            X-Processing-Key: text
            X-Processing-Signature: text
            Content-Type: application/json
            Accept: */*
            Content-Length: 161
            
            {
              "currency": "BTC",
              "address": "string",
              "tag": null,
              "amount": 0,
              "foreign_id": "string",
              "end_user_reference": "string",
              "sender_type": "legal",
              "sender_data": {
                "legal_name": "Example GmbH",
                "country_of_registration": "DEU"
              },
              "receiver_type": "natural",
              "receiver_data": {
                "first_name": "Friedrich",
                "last_name": "Müller",
                "date_of_birth": "1995-08-17"
              }
            }
        - lang: HTTP
          label: 'Crypto withdrawal with conversion'
          source: |-
            POST /api/v2/withdrawal/crypto HTTP/1.1
            Host: app.cryptoprocessing.com
            X-Processing-Key: text
            X-Processing-Signature: text
            Content-Type: application/json
            Accept: */*
            Content-Length: 161
            
            {
              "currency": "BTC",
              "convert_to": "EUR",
              "address": "string",
              "tag": null,
              "amount": 0,
              "foreign_id": "string",
              "end_user_reference": "string",
              "sender_type": "legal",
              "sender_data": {
                "legal_name": "Example GmbH",
                "country_of_registration": "DEU"
              },
              "receiver_type": "natural",
              "receiver_data": {
                "first_name": "Friedrich",
                "last_name": "Müller",
                "date_of_birth": "1995-08-17"
              }
            }
        - lang: HTTP
          label: 'Crypto withdrawal with conversion and a specified target amount'
          source: |-
            POST /api/v2/withdrawal/crypto HTTP/1.1
            Host: app.cryptoprocessing.com
            X-Processing-Key: text
            X-Processing-Signature: text
            Content-Type: application/json
            Accept: */*
            Content-Length: 161
            
            {
            "currency": "BTC",
            "convert_to": "EUR",
            "address": "string",
            "tag": null,
            "amount_to": 0,
            "foreign_id": "string",
            "end_user_reference": "string",
            "sender_type": "legal",
            "sender_data": {
              "legal_name": "Example GmbH",
              "country_of_registration": "DEU"
            },
            "receiver_type": "natural",
            "receiver_data": {
              "first_name": "Friedrich",
              "last_name": "Müller",
              "date_of_birth": "1995-08-17"
            }
            }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    data:
                      id: 678388
                      foreign_id: user_2317
                      end_user_reference: guest_user17
                      type: withdrawal_exchange
                      status: processing
                      amount: '25.00000000'
                      sender_amount: '25.00000000'
                      sender_currency: EUR
                      receiver_currency: BTC
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      foreign_id:
                        type: string
                      end_user_reference:
                        type: string
                      type:
                        type: string
                      status:
                        type: string
                      amount:
                        type: string
                      sender_amount:
                        type: string
                      sender_currency:
                        type: string
                      receiver_currency:
                        type: string
                      receiver_amount:
                        type: number
              examples:
                Withdrawal with currency conversion:
                  value:
                    data:
                      id: 678388
                      foreign_id: user_2317
                      type: withdrawal_exchange
                      end_user_reference: 2318
                      status: processing
                      amount: '25.00000000'
                      sender_amount: '25.00000000'
                      sender_currency: EUR
                      receiver_currency: BTC
                Withdrawal without currency conversion:
                  value:
                    data:
                      id: 131593883
                      foreign_id: btc_withdrawal_17_user_2318
                      end_user_reference: 2318
                      type: withdrawal
                      status: processing
                      amount: "0.0010000"
                      sender_amount: "0.0010000"
                      sender_currency: BTC
                      receiver_currency: BTC
                      receiver_amount: "0.0010000"
            application/xml:
              schema:
                type: object
                properties: {}
          x-gitbook-description-html: <p>OK</p>
        '400':
          description: The foreign id has already been taken
          content:
            application/json:
              schema:
                type: object
                x-gitbook-description-html: For withdrawals, <code>foreign_id</code> is the unique identifier of each withdrawal request. If you get this error message, it means you have already used this <code>foreign_id</code> before for a different withdrawal request. Choose a different <code>foreign_id</code> and try again. 
                properties:
                  errors:
                    type: object
                    properties:
                      foreign_id:
                        type: string
                        example: "The foreign id has already been taken"
        '403':

          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-withdrawal-crypto
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  type: string
                  x-gitbook-description-html: "The ISO code of the currency you want to withdraw. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                convert_to:
                  type: string
                  x-gitbook-description-html: "If you want to automatically convert all deposits to a certain currency, specify it here. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                address:
                  type: string
                  description: "Cryptocurrency address where you want to send funds."
                tag:
                  type: string
                  description: "If you are withdrawing XRP, a tag/memo is required. If you withdraw XRP without including a tag/memo, the funds may be lost."
                amount:
                  type: number
                  description: "Amount to withdraw."
                  minimum: 0
                amount_to:
                  type: number
                  x-gitbook-description-html: If you want to send a specific amount in the target currency (<code>convert_to</code>), use this parameter. You can only specify either <code>amount_to</code> or <code>amount</code>.
                foreign_id:
                  description: Unique ID of the withdrawal request.
                end_user_reference:
                  $ref: "#/components/schemas/end_user_reference"
                  maxLength: 255
                sender_type:
                  $ref: "#/components/schemas/sender_type"
                receiver_type:
                  type: string
                  enum:
                  - natural
                  - legal
                  - self
                  x-gitbook-description-html: Whether the recipient is a natural person (<code>natural</code>) or a legal entity (<code>legal</code>). For internal transfers, set this to <code>self</code>. 
                  x-enumDescriptions:
                    natural: The recipient is a natural person.
                    legal: The recipient is a legal entity.
                    self: This is an internal withdrawal within a company, so the sender and the recipient are the same.
                sender_data: 
                  type: object
                  x-gitbook-description-html: If the sender is a natural person, include their <code>first_name</code>, <code>last_name</code>, <code>date_of_birth</code> and <code>email</code>. If the sender is a legal entity, include their <code>legal_name</code>, <code>country_of_registration</code> and <code>email</code>. 
                  required:
                    - first_name
                    - last_name
                    - date_of_birth
                    - legal_name
                    - country_of_registration
                  properties:
                    first_name:
                      $ref: "#/components/schemas/sender_data_first_name"
                    last_name:
                      $ref: "#/components/schemas/sender_data_last_name"
                    date_of_birth:
                      $ref: "#/components/schemas/sender_data_date_of_birth"
                    email: 
                      $ref: "#/components/schemas/sender_data_email"
                    legal_name:
                      $ref: "#/components/schemas/sender_data_legal_name"
                    country_of_registration:
                      $ref: "#/components/schemas/sender_data_country_of_registration"
                receiver_data: 
                  type: object
                  x-gitbook-description-html: If the recipient is a natural person, include their <code>first_name</code>, <code>last_name</code> and <code>date_of_birth</code>. If the sender is a legal entity, include the <code>legal_name</code> and <code>country_of_registration</code>. If <code>receiver_type</code> is set to self, do not include this object.
                  required:
                    - first_name
                    - last_name
                    - date_of_birth
                    - legal_name
                    - country_of_registration
                  properties:
                    first_name:
                      $ref: "#/components/schemas/receiver_data_first_name"
                    last_name:
                      $ref: "#/components/schemas/receiver_data_last_name"
                    date_of_birth:
                      $ref: "#/components/schemas/receiver_data_date_of_birth"
                    legal_name:
                      $ref: "#/components/schemas/sender_data_legal_name"
                    country_of_registration:
                      $ref: "#/components/schemas/sender_data_country_of_registration"
              required:
                - currency
                - address
                - amount
                - foreign_id
                - sender_data
                - sender_type
                - receiver_data
                - receiver_type
                - end_user_reference
            examples:
              Basic example:
                value:
                  currency: BTC
                  convert_to: EUR
                  address: string
                  tag: 
                  amount: 0
                  amount_to: 0
                  foreign_id: string
                  end_user_reference: string
                  sender_type: legal
                  sender_data:
                    legal_name: Example GmbH
                    country_of_registration: DEU
                  receiver_type: natural
                  receiver_data:
                    first_name: Friedrich
                    last_name: Müller
                    date_of_birth: 1995-08-17
        description: ''
  /exchange/calculate:
    post:
      summary: Calculate the exchange rate
      x-gitbook-description-html: "<p>Get info about exchange rates. This endpoint has limitation up to 30 requests per minute from one IP address. In case this amount is exceeded a new successful response can only be obtained after one minute break.</p>"
      tags:
        - exchange
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    data:
                      sender_currency: EUR
                      sender_amount: '25.00000000'
                      receiver_currency: BTC
                      receiver_amount: '0.00123001'
                      fee_currency: CPD
                      fee_amount: '0.17266485'
                      price: '0.00004920'
                      ts_fixed: 1665008630
                      ts_release: 1665008690
                      fix_period: 60
                properties:
                  data:
                    type: object
                    required:
                      - sender_currency
                      - sender_amount
                      - receiver_currency
                      - receiver_amount
                      - fee_currency
                      - fee_amount
                      - price
                      - ts_fixed
                      - ts_release
                      - fix_period
                    properties:
                      sender_currency:
                        type: string
                        description: The currency you want to exchange.
                      sender_amount:
                        type: string
                        x-gitbook-description-html: If you included <code>sender_amount</code> in the request, this is the amount you want to exchange. If you included <code>receiver_amount</code>, this is the amount you need to send in your chosen currency.
                      receiver_currency:
                        type: string
                        description: The currency you want to receive.
                      receiver_amount:
                        type: string
                        x-gitbook-description-html: If you included <code>receiver_amount</code> in the request, this is the amount you want to receive. If you included <code>sender_amount</code>, this is the amount you will receive.
                      fee_currency:
                        type: string
                        description: The currency of the fee that will be charged for this exchange.
                      fee_amount:
                        type: string
                        description: The amount of the fee that will be charged for this exchange.
                      price:
                        type: string
                        description: The current exchange rate for this currency pair.
                      ts_fixed:
                        type: integer
                        description: The timestamp of the displayed exchange rate, in seconds.
                        format: int64
                      ts_release:
                        type: integer
                        format: int64
                        description: The timestamp of when the exchange rate will be unlocked, in seconds.
                      fix_period:
                        type: integer
                        format: int32
                        description: For how long this exchange rate will be valid, in seconds. Once this period is up, request the exchange rate again.
              examples:
                Real example:
                  value:
                    data:
                      sender_currency: EUR
                      sender_amount: '25.00000000'
                      receiver_currency: BTC
                      receiver_amount: '0.00123001'
                      fee_currency: CPD
                      fee_amount: '0.17266485'
                      price: '0.00004920'
                      ts_fixed: 1665008630
                      ts_release: 1665008690
                      fix_period: 60
          x-gitbook-description-html: <p>OK</p>
        '400':
          description: "Exchange is unavailable"
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      sender_currency:
                        type: string
                        example: "Exchange is unavailable for given currencies"
        '403':
          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-exchange-calculate
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sender_currency:
                  type: string
                  x-gitbook-description-html: "Currency to exchange from. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                receiver_currency:
                  type: string
                  x-gitbook-description-html: "Currency to exchange to. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                sender_amount:
                  x-gitbook-description-html: Amount you want to exchange. You must include either this parameter or <code>receiver_amount</code>.
                  type: number
                  minimum: 0
                  format: float
                receiver_amount:
                  x-gitbook-description-html: Amount you want to exchange. You must include either this parameter or <code>receiver_amount</code>.
                  type: number
                  format: float
                  minimum: 0
              required:
                - sender_currency
                - receiver_currency
            examples:
              Basic example:
                value:
                  sender_currency: BTC
                  receiver_currency: EUR
                  sender_amount: 0.03
        description: ''
  /exchange/fixed:
    post:
      summary: Exchange at a fixed exchange rate
      x-gitbook-description-html: "<p>Make the exchange at a given fixed exchange rate.</p>"
      tags:
        - exchange
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    data:
                      id: 2687667
                      foreign_id: knwi24op9
                      type: exchange
                      sender_amount: '0.01'
                      sender_currency: BTC
                      receiver_amount: '63.52069015'
                      receiver_currency: EUR
                      fee_amount: '6.98727592'
                      fee_currency: EUR
                      price: '6352.06901520'
                      status: processing
                properties:
                  data:
                    type: object
                    required:
                      - id
                      - foreign_id
                      - type
                      - sender_amount
                      - sender_currency
                      - receiver_amount
                      - receiver_currency
                      - fee_amount
                      - fee_currency
                      - price
                      - status
                    properties:
                      id:
                        type: integer
                        format: int32
                        $ref: "#/components/schemas/exchange_id"
                        minimum: 1
                      foreign_id:
                        $ref: "#/components/schemas/exchange_foreign_id"
                        minLength: 1
                      type:
                        $ref: "#/components/schemas/exchange_type"
                      sender_amount:
                        $ref: "#/components/schemas/exchange_sender_amount"
                      sender_currency:
                        $ref: "#/components/schemas/exchange_sender_currency"
                      receiver_amount:
                        $ref: "#/components/schemas/exchange_receiver_amount"
                      receiver_currency:
                        $ref: "#/components/schemas/exchange_receiver_currency"
                      fee_amount:
                        $ref: "#/components/schemas/exchange_fee_amount"
                      fee_currency:
                        $ref: "#/components/schemas/exchange_fee_currency"
                      price:
                        $ref: "#/components/schemas/exchange_price"
                      status:
                        $ref: "#/components/schemas/exchange_status"
              examples:
                Real example:
                  value:
                    data:
                      id: 2687667
                      foreign_id: knwi24op9
                      type: exchange
                      sender_amount: '0.01'
                      sender_currency: BTC
                      receiver_amount: '63.52069015'
                      receiver_currency: EUR
                      fee_amount: '6.98727592'
                      fee_currency: EUR
                      price: '6352.06901520'
                      status: processing
          x-gitbook-description-html: <p>OK</p>
        '403':
          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-exchange-fixed
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sender_currency:
                  type: string
                  x-gitbook-description-html: "Currency to exchange from. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                receiver_currency:
                  type: string
                  x-gitbook-description-html: "Currency to exchange to. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                sender_amount:
                  type: number
                  description: "Amount you want to exchange."
                  minimum: 0
                receiver_amount:
                  description: "Amount you want to exchange. "
                  type: number
                  minimum: 0
                foreign_id:
                  $ref: "#/components/schemas/foreign_id"
                  maxLength: 255
                price:
                  type: number
                  description: "Exchange rate price on which exchange will be placed."
              required:
                - foreign_id
                - price
            examples:
              Basic example:
                value:
                  sender_currency: BTC
                  receiver_currency: BTC
                  sender_amount: 0
                  receiver_amount: 0
                  foreign_id: string
                  price: 0
  /exchange/now:
    post:
      summary: Exchange regardless of the exchange rate
      x-gitbook-description-html: "<p>Make the exchange regardless of the price.</p>"
      tags:
        - exchange
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    data:
                      sender_currency: EUR
                      sender_amount: '1966.61957532'
                      receiver_currency: BTC
                      receiver_amount: '0.10000000'
                      fee_currency: EUR
                      fee_amount: '19.66619575'
                      price: '0.00005084'
                      id: 678287
                      foreign_id: user_1714
                      type: exchange
                      status: processing
                properties:
                  data:
                    type: object
                    required:
                     - sender_currency
                     - sender_amount
                     - receiver_currency
                     - receiver_amount
                     - fee_currency
                     - fee_amount
                     - price
                     - id
                     - foreign_id
                     - type
                     - status
                    properties:
                      sender_currency:
                        $ref: "#/components/schemas/exchange_sender_currency"
                      sender_amount:
                        $ref: "#/components/schemas/exchange_sender_amount"
                      receiver_currency:
                        $ref: "#/components/schemas/exchange_receiver_currency"
                      receiver_amount:
                        $ref: "#/components/schemas/exchange_receiver_amount"
                      fee_currency:
                        $ref: "#/components/schemas/exchange_fee_currency"
                      fee_amount:
                        $ref: "#/components/schemas/exchange_fee_amount"
                      price:
                        $ref: "#/components/schemas/exchange_price"
                      id:
                        $ref: "#/components/schemas/exchange_id"
                      foreign_id:
                        $ref: "#/components/schemas/exchange_foreign_id"
                      type:
                        $ref: "#/components/schemas/exchange_type"
                      status:
                        $ref: "#/components/schemas/exchange_status"
              examples:
                Real example:
                  value:
                    data:
                      sender_currency: EUR
                      sender_amount: '1966.61957532'
                      receiver_currency: BTC
                      receiver_amount: '0.10000000'
                      fee_currency: EUR
                      fee_amount: '19.66619575'
                      price: '0.00005084'
                      id: 678287
                      foreign_id: user_1714
                      type: exchange
                      status: processing
          x-gitbook-description-html: <p>OK</p>
        '403':
          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-exchange-now
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sender_currency:
                  type: string
                  x-gitbook-description-html: "Currency to exchange from. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                receiver_currency:
                  x-gitbook-description-html: "Currency to exchange to. For a list of all available currencies, see <a href=\"https://docs.cryptoprocessing.com/master/supported-currencies\">Supported currencies</a>."
                  type: string
                sender_amount:
                  type: number
                  x-gitbook-description-html: Amount you want to exchange. You must include either this parameter or <code>receiver_amount</code>.
                  minimum: 0
                receiver_amount:
                  type: number
                  x-gitbook-description-html: Amount you want to exchange. You must include either this parameter or <code>sender_amount</code>.
                  minimum: 0
                foreign_id:
                  $ref: "#/components/schemas/foreign_id"
                  maxLength: 255
              required:
                - sender_currency
                - receiver_currency
                - foreign_id
            examples:
              Basic example:
                value:
                  sender_currency: BTC
                  receiver_currency: BTC
                  sender_amount: 0
                  receiver_amount: 0
                  foreign_id: user_1714
  /invoices/create:
    post:
      summary: Create an invoice
      x-code-samples:
        - lang: HTTP
          label: 'Invoice without a timer'
          source: |-
            POST /api/v2/invoices/create HTTP/1.1
            Host: app.cryptoprocessing.com
            X-Processing-Key: text
            X-Processing-Signature: text
            Content-Type: application/json
            Accept: */*
            Content-Length: 161
            
            {
                "timer": false,
                "title": "Invoice Title",
                "currency": "EUR",
                "amount": 106.75,
                "foreign_id": "user_196",
                "end_user_reference": "12345",
                "url_success": "https://example.com/success",
                "url_failed": "https://example.com/failed",
                "email_user": "email@example.com",
                "sender_type": natural,
                "sender_data": {
                  "first_name": "Friedrich",
                  "last_name": "Müller",
                  "date_of_birth": "1995-08-17"
                  }
            }
        - lang: HTTP
          label: 'Invoice with a timer'
          source: |-
            POST /api/v2/invoices/create HTTP/1.1
            Host: app.cryptoprocessing.com
            X-Processing-Key: text
            X-Processing-Signature: text
            Content-Type: application/json
            Accept: */*
            Content-Length: 161

              {
                "timer": true,
                "title": "Invoice Title",
                "currency": "BTC",
                "amount": 0.02,
                "foreign_id": "user_197",
                "end_user_reference": "12345",
                "url_success": "https://example.com/success",
                "url_failed": "https://example.com/failed",
                "email_user": "email@example.com",
                "sender_type": legal,
                "sender_data": {
                  "legal_name": "Example GmbH",
                  "country_of_registration": "DEU"
                  }
              }
        - lang: HTTP
          label: 'Invoice with a timer and a pre-selected currency'
          source: |-
            POST /api/v2/invoices/create HTTP/1.1
            Host: app.cryptoprocessing.com
            X-Processing-Key: text
            X-Processing-Signature: text
            Content-Type: application/json
            Accept: */*
            Content-Length: 161
            
            {
                "timer": true,
                "title": "Invoice Title",
                "description": "Invoice description",
                "currency": "EUR",
                "sender_currency": "BTC",
                "amount": 35,
                "foreign_id": "user_198",
                "end_user_reference": "12345",
                "url_success": "https://example.com/success",
                "url_failed": "https://example.com/failed",
                "email_user": "email@example.com"
            }

      x-gitbook-description-html: |
        <p>Create an invoice for the client for a specified amount. Make sure that the
          URLs that you provide in the <code>url_success</code> and <code>url_failed</code> fields use the
          secure HTTPS protocol, use domain names (not IP addresses) and are
          considered clean by <a href=https://www.virustotal.com/gui/home/url>VirusTotal</a> and similar scanners.</p>
          <p><b>Note</b>: Cryptoprocessing is required to collect sender data in compliance with the MiCA regulations. For more details, see <a href=https://docs.cryptoprocessing.com/api-documentation/about-user-data-collection>About user data collection.</a></p>
          <p>The <code>end_user_reference</code> parameter is used to group, track and analyse transactions made by a specific customer. To prevent transactions from getting delayed or cancelled, always make sure to include the correct ID. The ID must not contain any personal or identifying customer data.</p>
          <p>If you do not provide sender data in the request, the invoice will still be created, but your customer will be prompted for their data on the invoice form. If the customer is already registered in your system, include their <code>end_user_reference</code> and the <code>sender_data</code> object for a smoother user experience.</p>
          <p><b>Warning:</b> For invoices with a timer and pre-selected currency, <code>sender_type</code> and <code>sender_data</code> are required.</p>
      x-mint:
          content: "Create an invoice for the client for a specified amount. \n\n 
          Make sure that the URLs that you provide in the url_success and url_failed fields use the secure HTTPS protocol, use domain names (not IP addresses) and are considered clean by VirusTotal and similar scanners.\n\n
          <Note>Cryptoprocessing is required to collect sender data in compliance with the MiCA regulations. For more details, see About user data collection.</Note>
          The <code>end_user_reference</code> parameter is used to group, track and analyse transactions made by a specific customer. To prevent transactions from getting delayed or cancelled, always make sure to include the correct ID. The ID must not contain any personal or identifying customer data.\n\n
          If you do not provide sender data in the request, the invoice will still be created, but your customer will be prompted for their data on the invoice form. If the customer is already registered in your system, include their <code>end_user_reference</code> and the <code>sender_data</code> object for a smoother user experience.\n\n
          <Note>For invoices with a timer and pre-selected currency, sender_type and sender_data are required.</Note>"
      tags:
        - invoices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  example-1:
                    data:
                      id: 123732
                      url: 
                      foreign_id: user_1714
                      address: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title: Invoice 137
                      status: pending
                      currency: BTC
                      amount: '0.01230000'
                      sender_currency: BTC
                      sender_amount: '0.01230000'
                      fixed_at: 1667895345
                      release_at: 1667896245
                      seconds_left: 899
                  example-2:
                    data:
                      id: 123732
                      url: 
                      foreign_id: user_1714
                      address: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title: Invoice 137
                      status: pending
                      currency: BTC
                      amount: '0.01230000'
                      sender_currency: BTC
                      sender_amount: '0.01230000'
                      fixed_at: 1667895345
                      release_at: 1667896245
                      seconds_left: 899
                properties:
                  data:
                    type: object
                    required:
                     - id
                     - url
                     - foreign_id
                     - end_user_reference
                     - address
                     - title
                     - status
                     - currency
                     - amount
                     - sender_currency
                     - sender_amount
                     - fixed_at
                     - release_at
                     - seconds_left
                    properties:
                      id:
                        type: integer
                        format: int32
                        description: Invoice ID.
                        example: 123732
                      url:
                        type: string
                        format: uri
                        description: Invoice URL.
                      foreign_id:
                        type: string
                        description: This invoice's unique ID in your system.
                      end_user_reference:
                        type: string
                        description: The unique ID of the customer this invoice is for. You can use it to group invoices by customer.
                      address:
                        type: string
                        description: The address that will receive the invoice payment.
                        example: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title:
                        type: string
                        minLength: 1
                        description: Invoice title.
                      status:
                        type: string
                        gitbook: For newly created invoices, this will always be either created or pending.
                        enum:
                          - created
                          - pending
                      currency:
                        type: string
                        description: Invoice currency.
                      amount:
                        type: string
                        description: Invoice amount.
                        example: '0.01230000'
                      sender_currency:
                        type: string
                        default: null
                        description: The currency the customer will pay in. Defaults to null for invoices without a pre-selected currency.
                      sender_amount:
                        type: string
                        example: '0.01230000'
                        default: null
                        description: The amount the customer needs to pay in their sender_currency. Defaults to null for invoices without a pre-selected currency.
                      fixed_at:
                        type: integer
                        format: int64
                        default: null
                        description: The Unix timestamp for when the invoice was created, in seconds. Defaults to null for invoices without a timer.
                        example: 1667896245
                      release_at:
                        type: integer
                        default: null
                        description: The Unix timestamp for when the invoice will expire, in seconds. Defaults to null for invoices without a timer.
                        format: int64
                        example: 1667896245
                      seconds_left:
                        type: integer
                        format: int32
                        default: null
                        description: The number of seconds left until the invoice expires. Defaults to null for invoices without a timer.
                        example: 899
              examples:
                Invoice without a timer:
                  value:
                    data:
                      id: 127
                      url: https://wallet.coinspaid.com/invoice/iEU3uh
                      foreign_id: user_196
                      end_user_reference: 12345
                      address: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title: Invoice 171
                      status: created
                      currency: EUR
                      amount: '0.106.75000000'
                      sender_currency: null
                      sender_amount: null
                      fixed_at: null
                      release_at: null
                      seconds_left: null
                Invoice with a timer:
                  value:
                    data:
                      id: 26
                      url: https://wallet.coinspaid.com/invoice/XJrbOG
                      foreign_id: user_197
                      end_user_reference: 12345
                      address: 2N2xtaZCNygY3iq6XKPJsdoPMDX85LUc8SM
                      title: Invoice 172
                      status: pending
                      currency: BTC
                      amount: '0.01000000'
                      sender_currency: null
                      sender_amount: null
                      fixed_at: 1592315493
                      release_at: 1592316393
                      seconds_left: 899
                Invoice with a timer and a pre-selected currency:
                  value:
                    data:
                      id: 28
                      url: https://wallet.coinspaid.com/invoice/zeUBm1
                      foreign_id: user_200
                      end_user_reference: 12345
                      address: 2NCMFo2k7S8HSDWp6qwQ2wiAMwz3XwEC4Gp
                      title: Invoice 173
                      status: pending
                      currency: BTC
                      amount: '0.01000000'
                      sender_currency: EUR
                      sender_amount: 35.00000000
                      fixed_at: 1592316313
                      release_at: 1592317213
                      seconds_left: 899
          x-gitbook-description-html: <p>OK</p>
        '403':
          $ref: "#/components/responses/BadKeyHeader"  
      operationId: post-invoices-create
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: "For partial pay invoices, set this parameter to good_until_expired. For standard invoices, use fill_or_kill or leave this parameter empty."
                  enum:
                    - fill_or_kill
                    - good_until_expired
                end_user_reference:
                  $ref: "#/components/schemas/end_user_reference"
                timer:
                  type: boolean
                  description: If this parameter is set to true, the invoice will expire in 15 minutes after it is created.
                title:
                  type: string
                  maxLength: 50
                  description: Invoice title that the customer will see.
                  minLength: 1
                description:
                  type: string
                  description: Invoice description that the customer will see.
                  maxLength: 1000
                foreign_id:
                  $ref: "#/components/schemas/foreign_id"
                  maxLength: 255
                currency:
                  type: string
                  description: "Currency you want to receive deposits in. For a list of all available currencies, see Supported currencies.
                sender_currency:
                  type: string
                  description: Currency of the customer's invoice payment. Invoices with a timer and a pre-selected currency will be externalized at the time of sending this parameter with timer set to true.
                amount:
                  type: number
                  description: "Invoice amount that you want to receive from the customer."
                url_success:
                  type: string
                  format: uri
                  description: "The URL the customer will be redirected to in case of a successful invoice payment."
                url_failed:
                  type: string
                  description: "The URL the customer will be redirected to in case of an unsuccessful invoice payment."
                  format: uri
                email_user:
                  type: string
                  description: If the amount the customer pays does not match the amount you set for the invoice, Cryptoprocessing will send an email to this address instructing the customer on how they can receive a refund. If they paid less, they will receive a full refund. If they paid more, the customer will get instructions on how to be refunded the difference.
                  format: email
                sender_type:
                  type: string
                  enum:
                  - natural
                  - legal
                  description: Whether the sender is a natural person (<code>natural</code>) or a legal entity (<code>legal</code>). If you include the <code>sender_type</code> parameter in the request, <code>sender_data</code> is also required.
                sender_data: 
                  description: If the sender is a natural person, include their <code>first_name</code>, <code>last_name</code> and <code>date_of_birth</code>. If the sender is a legal entity, include their <code>legal_name</code> and <code>country_of_registration</code>.
                  type: object
                  required:
                    - first_name
                    - last_name
                    - date_of_birth
                    - legal_name
                    - country_of_registration
                  properties:
                    first_name:
                      $ref: "#/components/schemas/sender_data_first_name"
                    last_name:
                      $ref: "#/components/schemas/sender_data_last_name"
                    date_of_birth:
                      $ref: "#/components/schemas/sender_data_date_of_birth"
                    legal_name:
                      $ref: "#/components/schemas/sender_data_legal_name"
                    country_of_registration:
                      $ref: "#/components/schemas/sender_data_country_of_registration"
              required:
                - timer
                - title
                - foreign_id
                - currency
                - amount
                - url_success
                - url_failed
                - email_user
            examples:
              Basic example:
                value:
                  type: fill_or_kill
                  timer: true
                  title: Invoice 171
                  description: string
                  foreign_id: string
                  currency: BTC
                  sender_currency: string
                  amount: 0
                  url_success: http://example.com
                  url_failed: http://example.com
                  email_user: user@example.com
                  sender_type: legal
                  sender_data:
                    legal_name: Example GmbH
                    country_of_registration: DEU
  /transactions/info:
    get:
      summary: Fetch transaction metadata by ID
      x-gitbook-description-html: |-
        <p>Use this endpoint to get transaction details by ID or <code>foreign_id</code>. You can only include one of those parameters in your request.</p>
      tags:
       - transactions
      parameters:
        - schema:
            type: string
          in: header
          name: X-Processing-Key
          required: true
          description: Private key
          x-gitbook-description-html: <p>Private key</p>
        - schema:
            type: string
          in: header
          name: X-Processing-Signature
          required: true
          description: Private secret key
          x-gitbook-description-html: <p>Private secret key</p>
        - name: id
          in: query
          description: Transaction ID.
          schema:
            type: string
        - name: foreign_id
          in: query
          description: Foreign ID.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - foreign_id
                  - type
                  - crypto_address
                properties:
                  id:
                    type: string
                    description: Transaction ID.
                    example: 2769144
                  foreign_id:
                    type: string
                    description: This transaction's unique identifier in your system.
                    example: "approve:823188"
                  type:
                    type: string
                    description: Transaction type.
                    example: withdrawal_for_approve
                  crypto_address:
                    type: object
                    properties:
                      id:
                        type: number
                        example: 411002
                        description: Address ID.
                      currency:
                        type: string
                        description: Address currency.
                        example: ETH
                      address:
                        type: string
                        description: The blockchain address.
                        example: 0xf774aefe7921b82aaf11216cedea1d288af63f3e
                      tag:
                        type: string
                        default: null
                  currency_sent:
                    type: object
                    properties:
                      currency:
                        type: string
                      amount: 
                        type: integer
                  currency_received:
                    type: object
                    properties:
                      currency:
                        type: string
                      amount: 
                        type: integer
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 823194
                        currency:
                          type: string
                          example: ETH
                        transaction_type:
                          type: string
                          example: blockchain
                        type:
                          type: string
                          example: withdrawal_for_approve
                        address:
                          type: string
                          example: 0xf774aefe7921b82aaf11216cedea1d288af63f3e
                        tag:
                          type: string
                          default: null
                        amount:
                          type: integer
                          example: 0.00343475
                        txid:
                          type: string
                          example: 0xada68155bd33510a58085d032e34b25533eb092c709ad640dd77c34cfe7ecad3
                        confirmations:
                          type: integer
                          example: 0
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: mining
                        currency:
                          type: string
                          example: ETH
                        amount: 
                          type: integer
                          example: 0.1
                    example:
                    - type: mining
                      currency: ETH
                      amount: 0.1
                    - type: fee_crypto_deposit_wallet_client
                      currency: ETH
                      amount: 0.02050480
                  error:
                    type: string
                    example: ""
                  status:
                    type: string
                    example: confirmed

  /{client}/notifications/compliance:
    get:
      summary: Get list of Compliance Notification emails
      tags:
        - Compliance Notification Settings
      parameters:
        - name: client
          in: path
          required: true
          description: Client ID
          schema:
            type: string
          x-gitbook-description-html: <p>Client ID</p>
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  notify_owners:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        is_custom:
                          type: boolean
                          example: true
                        email:
                          type: string
                          example: test@email.com
          x-gitbook-description-html: <p>OK</p>
        '403':
          $ref: '#/components/responses/HeaderAuthorization'
    post:
      summary: Update list of Compliance Notification emails
      tags:
        - Compliance Notification Settings
      parameters:
        - name: client
          in: path
          required: true
          description: Client ID
          schema:
            type: string
          x-gitbook-description-html: <p>Client ID</p>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emails:
                  type: array
                  items:
                    type: string
                    example: user@domain.com
                notify_owners:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  notify_owners:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        is_custom:
                          type: boolean
                          example: true
                        email:
                          type: string
                          example: test@email.com
          x-gitbook-description-html: <p>Ok</p>
        '403':
          $ref: '#/components/responses/HeaderAuthorization'





components:
  schemas:
    currency_rate_from:
      type: string
      description: The amount to be exchanged, in currency_from.
    currency_rate_to:
      type: string
      description: The amount to be received, in currency_to.
    currency_from:
      type: object
      description: The currency to be exchanged.
      properties:
        currency:
          type: string
          description: Currency ticker.
        type:
          type: string
          description: Currency type (crypto or fiat).
          enum: 
            - crypto
            - fiat
        min_amount:
          type: string
          description: The minimum amount for deposits without exchange.
        min_amount_deposit_with_exchange:
          type: string
          description: The minimum amount for deposits with exhange.
    currency_to:
      type: object
      description: The currency to receive.
      properties:
        currency:
          type: string
          description: Currency ticker.
        type:
          type: string
          description: Currency type (crypto or fiat).
          enum:
            - crypto
            - fiat
    exchange_sender_currency:
      type: string
      description: Currency to be exchanged.
    exchange_sender_amount:
      type: string
      description: Amount to be exchanged.
    exchange_receiver_currency:
      type: string
      description: Currency to be received.
    exchange_receiver_amount:
      type: string
      description: Amount to be received.
    exchange_fee_currency:
      type: string
      description: The currency the network fee will be paid in.
    exchange_fee_amount:
      type: string
      description: Network fee amount.
    exchange_price:
      type: string
      description: Exchange rate.
    exchange_id:
      type: integer
      format: int32
      minimum: 1
      description: Exchange ID.
    exchange_foreign_id:
      type: string
      minLength: 1
      description: This exchange's unique identifier in your system.
    exchange_type:
      type: string
      description: Operation type.
    exchange_status:
      type: string
      description: Exchange status.
      default: processing
    foreign_id:
      type: string
      description: "Unique foreign ID in your system. Must not contain personal data, such as the user's name or email address."
    end_user_reference:
      type: string
      x-gitbook-description-html: Permanent ID of the customer in your system. Must not contain personal data, such as the user's name or email address. Include this customer's data in the <code>sender_data</code> object.
    sender_type:
      type: string
      enum:
      - natural
      - legal
      x-gitbook-description-html: Whether the sender is a natural person (<code>natural</code>) or a legal entity (<code>legal</code>). 
    sender_data_first_name:
      type: string
      description: The sender's first name. This is required for a natural person. For a legal entity, do not include this parameter.
    sender_data_last_name:
      type: string
      description: The sender's last name. This is required for a natural person. For a legal entity, do not include this parameter.
    sender_data_date_of_birth:
      type: string
      description: The sender's date of birth, YYYY-MM-DD. You can optionally include this for a natural person. For a legal entity, do not include this parameter.
    sender_data_email: 
      type: string
      description: The sender's email. You can optionally include this parameter for both natural persons and legal entities. The formatting of the value is checked to make sure it is a valid email address.
    sender_data_legal_name:
      type: string
      description: The company's name. This is required for a legal entity. For a natural person, do not include this parameter.
    sender_data_country_of_registration:
      type: string
      description: The company's country of registration (ISO alpha-3 format, three characters). This is required for a legal entity. For a natural person, do not include this parameter.
    receiver_data_first_name:
      type: string
      description: The recipient's first name. This is required for a natural person. For a legal entity, do not include this parameter.
    receiver_data_last_name:
      type: string
      description: The recipient's last name. This is required for a natural person. For a legal entity, do not include this parameter.
    receiver_data_date_of_birth:
      type: string
      description: The recipient's date of birth, YYYY-MM-DD. You can optionally include this for a natural person. For a legal entity, do not include this parameter.
    receiver_data_email: 
      type: string
      description: The recipient's email. You can optionally include this for a natural person. For a legal entity, do not include this parameter.
  
  responses:
    HeaderAuthorization:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            x-examples:
              example-1:
                error: Bad key header
                code: bad_header_key
            properties:
              error:
                type: string
                enum:
                  - Bad content format
                  - Bad key header
                  - Bad signature header
                  - Client is not enabled
                  - No key header
                  - Wrong api version
                  - No signature header
                default: Bad content format
              code:
                type: string
                enum:
                  - bad_content_format
                  - bad_header_key
                  - bad_header_signature
                  - client_disabled
                  - required_header_key
                  - required_header_signature
                  - api_disabled
                default: bad_content_format
            required:
              - error
              - code
          examples:
            Base example:
              value:
                error: Bad content format
                code: bad_content_format
      x-gitbook-description-html: <p>Example response</p>
    BadKeyHeader:
      description: Bad key header
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Bad key header.
              code: 
                type: string
                example: bad_header_key
            x-gitbook-description-html: If you are getting this error message, make sure you are using the right API key. Double-check the key is not converted to lowercase or uppercase.
    ErrorResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                uniqueItems: true
                items:
                  type: string
                  example: Internal error
              error_code:
                type: integer
                enum:
                  - 422
            required:
              - errors
              - error_code
          examples:
            Basic example:
              value:
                errors:
                  - Internal error
                error_code: 422
      x-gitbook-description-html: <p>Example response</p>
  securitySchemes:
    xProcessingKey:
      type: apiKey
      in: header 
      name: X-processing-key
    xProcessingSignature:
      type: apiKey
      in: header
      name: X-processing-signature

